/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.presentacionbdavanzadas2;

import DTO.PersonaDTO;
import DatosAleatorios.PersonaSeleccionada;
import Dominio.Persona;
import INegocio.IAgregarLicenciaBO;
import INegocio.IverificarLicenciaNoCaducadaPorRFCBO;
import Negocio.AgregarLicencioBO;
import Negocio.verificarLicenciaNoCaducadaPorRFCBO;
import com.mycompany.presentacionbdavanzadas2.frmInicio;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author RUZZKY
 */
public class frmTramites extends javax.swing.JFrame {

    int row, columna;
    IverificarLicenciaNoCaducadaPorRFCBO verificarLicenciaNoCaducadaPorRFC;
    private IAgregarLicenciaBO personaNegocio;

    public frmTramites() {
        verificarLicenciaNoCaducadaPorRFC = new verificarLicenciaNoCaducadaPorRFCBO();
        personaNegocio = new AgregarLicencioBO();
        initComponents();

        tabla();
        llenarTabla();

    }

    public void tabla() {
        tblTramites.setDefaultRenderer(Object.class, new RenderTabla());

        DefaultTableModel modeloTabla = new DefaultTableModel();
        tblTramites.setModel(modeloTabla);

        tblTramites.setRowHeight(40);

        // DefiniciÃ³n de las columnas y sus encabezados
        String[] encabezados = {"Nombre", "Apellido Paterno", "Apellido Materno", "CURP", "RFC", "Fecha de Nacimiento", "TelÃ©fono", "Discapacidad"};
        modeloTabla.setColumnIdentifiers(encabezados);

        // ConfiguraciÃ³n del ancho preferido de las columnas
        int[] anchos = {100, 100, 100, 100, 100, 100, 100, 100};
        for (int i = 0; i < anchos.length; i++) {
            tblTramites.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
    }

    private void btnLicenciaActionPerformed(java.awt.event.ActionEvent evt) {
        // Obtener el Ã­ndice de la fila seleccionada
        int selectedRow = tblTramites.getSelectedRow();
        if (selectedRow != -1) { // Verificar si hay una fila seleccionada
            // Mostrar el formulario para emitir una licencia
            frmLicencia frmLicencia = new frmLicencia();
            frmLicencia.setVisible(true);
        } else {
            // Mostrar un mensaje indicando que no se ha seleccionado ninguna persona
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una persona de la tabla.", "Mensaje", JOptionPane.WARNING_MESSAGE);
        }
    }

    public void llenarTabla() {
        String rfc = txtBusqueda.getText();
        Persona persona = personaNegocio.obtenerPersonaPorRFC(rfc);

        DefaultTableModel defa = (DefaultTableModel) tblTramites.getModel();
        defa.setRowCount(0);

        if (persona != null) {
            Object[] datos = new Object[defa.getColumnCount()];

            datos[0] = persona.getNombres();
            datos[1] = persona.getApellidoPaterno();
            datos[2] = persona.getApellidoMaterno();
            datos[3] = persona.getCurp();
            datos[4] = persona.getRfc();
            datos[5] = (persona.getFechaNacimiento() != null) ? persona.getFechaNacimiento().get(Calendar.DAY_OF_MONTH) + "/"
                    + (persona.getFechaNacimiento().get(Calendar.MONTH) + 1) + "/"
                    + persona.getFechaNacimiento().get(Calendar.YEAR) : "";
            datos[6] = persona.getTelefono();
            datos[7] = persona.getDiscapacidad();

            defa.addRow(datos);
        } else {
            System.out.println("No se encontro una persona con ese rfc");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTramites = new javax.swing.JTable();
        txtBusqueda = new javax.swing.JTextField();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("SimSun", 0, 60)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ðŸ‡²ðŸ‡½Tramites");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(242, 239, 230));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(5, 0, 0));
        jLabel2.setText("Busqueda:");

        jScrollPane1.setFocusable(false);

        tblTramites = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tblTramites.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblTramites.setRowHeight(25);
        tblTramites.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tblTramites.getTableHeader().setReorderingAllowed(false);
        tblTramites.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTramitesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTramites);
        tblTramites.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        tblTramites.getTableHeader().setOpaque(false);
        tblTramites.getTableHeader().setBackground(new Color(102,89,222));
        tblTramites.getTableHeader().setForeground(new Color(255,255,255));

        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        btnRegresar.setBackground(new java.awt.Color(255, 102, 102));
        btnRegresar.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(2, 2, 2));
        btnRegresar.setText("Regresar");
        btnRegresar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnRegresar.setFocusPainted(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBusqueda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblTramitesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTramitesMouseClicked
        
        // Este bloque de cÃ³digo Java se ejecuta cuando se selecciona una fila en una tabla (tblTramites). 
        
        // Obtiene los datos de la fila seleccionada y crea un objeto PersonaDTO con esos datos.
        
        // Luego, pregunta al usuario quÃ© trÃ¡mite desea realizar: licencia o placas.
        
        // Dependiendo de la opciÃ³n seleccionada por el usuario y si la licencia no estÃ¡ caducada, se abre el formulario correspondiente.
        
        // Si no se selecciona ninguna fila en la tabla, se muestra un mensaje de advertencia.

        
        int selectedRow = tblTramites.getSelectedRow();
        // Si hay una fila seleccionada en la tabla
        if (selectedRow != -1) { 
            // Obtiene el modelo de la tabla
            DefaultTableModel model = (DefaultTableModel) tblTramites.getModel();
            // Crea un nuevo objeto PersonaDTO
            PersonaDTO personaSeleccionada = new PersonaDTO();
            
            // Obtiene los datos de la fila seleccionada y los asigna al objeto PersonaDTO
            personaSeleccionada.setNombres((String) model.getValueAt(selectedRow, 0));
            personaSeleccionada.setApellidoPaterno((String) model.getValueAt(selectedRow, 1));
            personaSeleccionada.setApellidoMaterno((String) model.getValueAt(selectedRow, 2));
            personaSeleccionada.setCurp((String) model.getValueAt(selectedRow, 3));
            personaSeleccionada.setRfc((String) model.getValueAt(selectedRow, 4));
            personaSeleccionada.setDiscapacidad((String) model.getValueAt(selectedRow, 7));
            
            // Establece la persona seleccionada utilizando el mÃ©todo estÃ¡tico setPersonaSeleccionada de la clase PersonaSeleccionada
            PersonaSeleccionada.setPersonaSeleccionada(personaSeleccionada);
            String rfc = (String) model.getValueAt(selectedRow, 4);
            // Verifica si hay una licencia no caducada para la persona seleccionada
            boolean licenciaNoCaducada = verificarLicenciaNoCaducadaPorRFC.verificarLicenciaNoCaducadaPorRFC(rfc);
             // Muestra un cuadro de diÃ¡logo para que el usuario elija el trÃ¡mite a realizar: licencia o placas
            String[] opciones = {"Licencia", "Placas"};
            int opcionSeleccionada = JOptionPane.showOptionDialog(this,
                    "Â¿Que tramite desea realizar?",
                    "Seleccione una opciÃ³n",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    opciones,
                    opciones[0]);
            // Dependiendo de la opciÃ³n seleccionada por el usuario 
//            y si hay una licencia no caducada, 
//                se abre el formulario correspondiente

            if (opcionSeleccionada == 0) {
                // Crea una instancia del formulario de licencia
                frmLicencia frmLicencia = new frmLicencia();
                // Muestra el formulario de licencia
                frmLicencia.setVisible(true);
                // Cierra el formulario actual
                this.dispose();
            } else if (licenciaNoCaducada && opcionSeleccionada == 1) {
                // Crea una instancia del formulario de placas
                frmPlaca frmTramite = new frmPlaca();
                // Muestra el formulario de placas
                frmTramite.setVisible(true);
                // Cierra el formulario actual
                this.dispose();
            } else {
                // Si no se cumplen las condiciones anteriores, se muestra un mensaje de informaciÃ³n indicando que no hay licencias vigentes
       
                JOptionPane.showMessageDialog(this, "No se encontraron licencias vigentes.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
                // Si no hay una fila seleccionada en la tabla, se muestra un mensaje de advertencia
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una persona de la tabla.", "Mensaje", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tblTramitesMouseClicked

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased
        llenarTabla();

    }//GEN-LAST:event_txtBusquedaKeyReleased

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        frmInicio inicio = new frmInicio();
        inicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean numeros = key >= 48 && key <= 57;
        boolean espacio = key == 32;

        if (!(minusculas || mayusculas || espacio || numeros)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtBusquedaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTramites.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTramites.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTramites.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTramites.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTramites().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTramites;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables

}
